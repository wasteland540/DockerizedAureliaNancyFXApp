{"version":3,"sources":["app.js","environment.js","main.js","messages.js","utility.js","web-api.js","resources/index.js","components/contact-detail/contact-detail.js","components/contact-dialog/contact-dialog.js","components/contact-list/contact-list.js","components/no-selection/no-selection.js","resources/elements/loading-indicator.js"],"names":["App","inject","api","configureRouter","config","router","title","map","route","moduleId","name","debug","testing","configure","aurelia","use","standardConfiguration","feature","plugin","developmentLogging","start","then","setRoot","ContactUpdated","contact","ContactViewed","ContactAdded","areEqual","obj1","obj2","Object","keys","every","key","hasOwnProperty","latency","id","getId","contacts","firstName","lastName","email","phoneNumber","WebAPI","isRequesting","getContactList","Promise","setTimeout","results","x","resolve","getContactDetails","found","filter","JSON","parse","stringify","saveContact","instance","index","indexOf","push","globalResources","ContactDetail","ea","setContactAndTitle","activate","params","routeConfig","navModel","setTitle","originalContact","publish","save","canDeactivate","result","confirm","ContactDialog","controller","ContactList","dialogService","subscribe","select","msg","find","assign","created","selectedId","openDialog","open","viewModel","model","response","wasCancelled","output","console","log","callNancy","client","withBaseUrl","get","data","NoSelection","message","nprogress","LoadingIndicator","defaultValue","on","loadingChanged","newValue","done"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {WebAPI} from './web-api';\n\nexport class App {\n  static inject() { return [WebAPI]; }\n\n  constructor(api) {\n    this.api = api;\n  }\n\n  configureRouter(config, router){\n    config.title = 'Contacts';\n    config.map([\n      { route: '',              moduleId: './components/no-selection/no-selection',   title: 'Select'},\n      { route: 'contacts/:id',  moduleId: './components/contact-detail/contact-detail', name:'contacts' }\n    ]);\n\n    this.router = router;\n  }\n\n  //TODO: add new contacts\n  //TODO: validation\n\n  //TODO: make request: http://192.168.99.100:8080/add?a=2&b=3\n  //docker start <container-id>\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources')\n    .plugin('aurelia-dialog');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class ContactUpdated{\r\n    constructor(contact){\r\n        this.contact = contact;\r\n    }\r\n}\r\n\r\nexport class ContactViewed{\r\n    constructor(contact){\r\n        this.contact = contact;\r\n    }\r\n}\r\n\r\nexport class ContactAdded {\r\n    constructor(contact){\r\n        this.contact = contact;\r\n    }\r\n}","export function areEqual(obj1, obj2) {\n\treturn Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && (obj1[key] === obj2[key]));\n};","let latency = 200;\nlet id = 0;\n\nfunction getId(){\n  return ++id;\n}\n\nlet contacts = [\n  {\n    id:getId(),\n    firstName:'John',\n    lastName:'Tolkien',\n    email:'tolkien@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Clive',\n    lastName:'Lewis',\n    email:'lewis@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Owen',\n    lastName:'Barfield',\n    email:'barfield@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Charles',\n    lastName:'Williams',\n    email:'williams@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Roger',\n    lastName:'Green',\n    email:'green@inklings.com',\n    phoneNumber:'867-5309'\n  }\n];\n\nexport class WebAPI {\n  isRequesting = false;\n  \n  getContactList(){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = contacts.map(x =>  { return {\n          id:x.id,\n          firstName:x.firstName,\n          lastName:x.lastName,\n          email:x.email\n        }});\n        resolve(results);\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  getContactDetails(id){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let found = contacts.filter(x => x.id == id)[0];\n        resolve(JSON.parse(JSON.stringify(found)));\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  saveContact(contact){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let instance = JSON.parse(JSON.stringify(contact));\n        let found = contacts.filter(x => x.id == contact.id)[0];\n\n        if(found){\n          let index = contacts.indexOf(found);\n          contacts[index] = instance;\n        }else{\n          instance.id = getId();\n          contacts.push(instance);\n        }\n\n        this.isRequesting = false;\n        resolve(instance);\n      }, latency);\n    });\n  }\n}\n","export function configure(config) {\n  config.globalResources(['./elements/loading-indicator']); //set as global resource, so we do not need to require this element in every view.\n}\n","import {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {WebAPI} from '../../web-api';\r\nimport {ContactUpdated, ContactViewed} from '../../messages';\r\nimport {areEqual} from '../../utility';\r\n\r\nexport class ContactDetail {\r\n    static inject = [WebAPI, EventAggregator];\r\n\r\n    constructor(api, ea){\r\n        this.api = api;\r\n        this.ea = ea;\r\n    }\r\n\r\n    //refactored\r\n    setContactAndTitle(contact){\r\n        //TODO: is undefined???\r\n    }\r\n\r\n    //life-cycle method from routed components\r\n    activate(params, routeConfig){\r\n        this.routeConfig = routeConfig;\r\n\r\n        return this.api.getContactDetails(params.id).then(contact => {\r\n            this.contact = contact;\r\n            this.routeConfig.navModel.setTitle(contact.firstName);\r\n            this.originalContact = JSON.parse(JSON.stringify(contact));\r\n\r\n            this.ea.publish(new ContactViewed(this.contact));\r\n        });\r\n    }\r\n\r\n    get canSave(){\r\n        return this.contact.firstName && this.contact.lastName && !this.api.isRequesting;\r\n    }\r\n\r\n    save(){\r\n        this.api.saveContact(this.contact).then(contact => {\r\n            this.contact = contact;\r\n            this.routeConfig.navModel.setTitle(contact.firstName);\r\n            this.originalContact = JSON.parse(JSON.stringify(contact));\r\n\r\n            this.ea.publish(new ContactUpdated(this.contact));\r\n        });\r\n    }\r\n\r\n    //life-cycle method from routed components. opportuinty to cancel navigation\r\n    canDeactivate(){\r\n        if(!areEqual(this.originalContact, this.contact)){\r\n            let result = confirm('You have unsaved changes. Are you sure you wish to leave?');\r\n\r\n            if(!result) {\r\n                this.ea.publish(new ContactViewed(this.contact));\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        return true;\r\n    }    \r\n}","import {DialogController} from 'aurelia-dialog';\r\n\r\nexport class ContactDialog {\r\n    static inject = [DialogController];\r\n\r\n    contact = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n    };\r\n\r\n    constructor(controller){\r\n        this.controller = controller;\r\n    }\r\n}","import {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {HttpClient} from 'aurelia-http-client';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {WebAPI} from '../../web-api';\r\nimport {ContactUpdated, ContactViewed, ContactAdded} from '../../messages';\r\nimport {ContactDialog} from '../contact-dialog/contact-dialog';\r\n\r\nexport class ContactList{\r\n    static inject = [WebAPI, EventAggregator, DialogService];\r\n\r\n    constructor(api, ea, dialogService){\r\n        this.api = api;\r\n        this.ea = ea;\r\n        this.dialogService = dialogService;\r\n        this.contacts = [];\r\n\r\n        this.ea.subscribe(ContactViewed, msg => this.select(msg.contact));\r\n\r\n        this.ea.subscribe(ContactUpdated, msg => {\r\n            let id = msg.contact.id;\r\n            let found = this.contacts.find(x => x.id === id);\r\n            \r\n            Object.assign(found, msg.contact);\r\n        });\r\n\r\n        this.ea.subscribe(ContactAdded, msg => {\r\n            //reload contacts from API\r\n            this.api.getContactList().then(contacts => this.contacts = contacts);\r\n            this.select(msg.contact);\r\n        });\r\n    }\r\n\r\n    created(){\r\n        this.api.getContactList().then(contacts => this.contacts = contacts);\r\n    }\r\n\r\n    select(contact){\r\n        this.selectedId = contact.id;\r\n        return true; //allows to trigger the router! anotherwise the action of an event will be canceled\r\n    }\r\n\r\n    openDialog(){\r\n        this.dialogService.open({viewModel: ContactDialog, model:{}}).then(response => {\r\n            if (!response.wasCancelled) {\r\n                this.api.saveContact(response.output).then(contact => {\r\n                    this.contact = contact;\r\n                    this.originalContact = JSON.parse(JSON.stringify(contact));\r\n\r\n                    this.ea.publish(new ContactAdded(this.contact));\r\n                });\r\n            } else {\r\n                console.log('bad');\r\n            }\r\n        });\r\n    }\r\n\r\n    callNancy(){\r\n        let client = new HttpClient()\r\n            .configure(x => {\r\n                x.withBaseUrl('http://192.168.99.100:8080');\r\n            });\r\n\r\n        client.get('add?a=2&b=3')\r\n        .then(data => {\r\n            let response = JSON.parse(data.response);\r\n            console.log(response.result);\r\n        });\r\n    }\r\n}","export class NoSelection {\r\n    constructor(){\r\n        this.message = \"Please Select a Contact.\"\r\n    }\r\n}","import * as nprogress from 'nprogress';\r\nimport {bindable, noView, decorators} from 'aurelia-framework';\r\n\r\nexport let LoadingIndicator = decorators(\r\n    noView(['nprogress/nprogress.css']), //tells aurelia not to load a loading-indicator.html view\r\n    bindable({name: 'loading', defaultValue: false}) // loading property for binding in html\r\n).on(class {\r\n    loadingChanged(newValue){\r\n        if(newValue){\r\n            nprogress.start();\r\n        }\r\n        else {\r\n            nprogress.done();\r\n        }\r\n    }\r\n});"],"sourceRoot":".."}